/**
 * Plastiq Public API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Address from './Address';

/**
 * The BankAccount model module.
 * @module model/BankAccount
 * @version 1.0.0
 */
class BankAccount {
    /**
     * Constructs a new <code>BankAccount</code>.
     * Bank Account Funded
     * @alias module:model/BankAccount
     * @param accountHolderName {String} The legal name of the account holder
     * @param accountNumber {String} The account number of the bank account
     * @param routingNumber {String} The routing number of the bank account
     * @param billingAddress {module:model/Address} 
     */
    constructor(accountHolderName, accountNumber, routingNumber, billingAddress) { 
        
        BankAccount.initialize(this, accountHolderName, accountNumber, routingNumber, billingAddress);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, accountHolderName, accountNumber, routingNumber, billingAddress) { 
        obj['accountHolderName'] = accountHolderName;
        obj['accountNumber'] = accountNumber;
        obj['routingNumber'] = routingNumber;
        obj['billingAddress'] = billingAddress;
    }

    /**
     * Constructs a <code>BankAccount</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BankAccount} obj Optional instance to populate.
     * @return {module:model/BankAccount} The populated <code>BankAccount</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BankAccount();

            if (data.hasOwnProperty('accountHolderName')) {
                obj['accountHolderName'] = ApiClient.convertToType(data['accountHolderName'], 'String');
            }
            if (data.hasOwnProperty('accountNumber')) {
                obj['accountNumber'] = ApiClient.convertToType(data['accountNumber'], 'String');
            }
            if (data.hasOwnProperty('accountType')) {
                obj['accountType'] = ApiClient.convertToType(data['accountType'], 'String');
            }
            if (data.hasOwnProperty('routingNumber')) {
                obj['routingNumber'] = ApiClient.convertToType(data['routingNumber'], 'String');
            }
            if (data.hasOwnProperty('billingAddress')) {
                obj['billingAddress'] = ApiClient.convertToType(data['billingAddress'], Address);
            }
        }
        return obj;
    }


}

/**
 * The legal name of the account holder
 * @member {String} accountHolderName
 */
BankAccount.prototype['accountHolderName'] = undefined;

/**
 * The account number of the bank account
 * @member {String} accountNumber
 */
BankAccount.prototype['accountNumber'] = undefined;

/**
 * The type of the bank account
 * @member {module:model/BankAccount.AccountTypeEnum} accountType
 */
BankAccount.prototype['accountType'] = undefined;

/**
 * The routing number of the bank account
 * @member {String} routingNumber
 */
BankAccount.prototype['routingNumber'] = undefined;

/**
 * @member {module:model/Address} billingAddress
 */
BankAccount.prototype['billingAddress'] = undefined;





/**
 * Allowed values for the <code>accountType</code> property.
 * @enum {String}
 * @readonly
 */
BankAccount['AccountTypeEnum'] = {

    /**
     * value: "CHECKING"
     * @const
     */
    "CHECKING": "CHECKING",

    /**
     * value: "SAVINGS"
     * @const
     */
    "SAVINGS": "SAVINGS"
};



export default BankAccount;

