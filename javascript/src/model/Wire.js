/**
 * Plastiq Public API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Wire model module.
 * @module model/Wire
 * @version 1.0.0
 */
class Wire {
    /**
     * Constructs a new <code>Wire</code>.
     * @alias module:model/Wire
     * @param type {module:model/Wire.TypeEnum} 
     * @param accountNumber {String} Bank wire account number (alphanumeric)
     * @param routingNumber {String} Bank wire routing number
     * @param beneficiaryName {String} 
     * @param country {module:model/Wire.CountryEnum} Two-letter country code (ISO 3166-1 alpha-2).
     */
    constructor(type, accountNumber, routingNumber, beneficiaryName, country) { 
        
        Wire.initialize(this, type, accountNumber, routingNumber, beneficiaryName, country);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, type, accountNumber, routingNumber, beneficiaryName, country) { 
        obj['type'] = type;
        obj['accountNumber'] = accountNumber;
        obj['routingNumber'] = routingNumber;
        obj['beneficiaryName'] = beneficiaryName;
        obj['country'] = country;
    }

    /**
     * Constructs a <code>Wire</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Wire} obj Optional instance to populate.
     * @return {module:model/Wire} The populated <code>Wire</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Wire();

            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('accountNumber')) {
                obj['accountNumber'] = ApiClient.convertToType(data['accountNumber'], 'String');
            }
            if (data.hasOwnProperty('routingNumber')) {
                obj['routingNumber'] = ApiClient.convertToType(data['routingNumber'], 'String');
            }
            if (data.hasOwnProperty('beneficiaryName')) {
                obj['beneficiaryName'] = ApiClient.convertToType(data['beneficiaryName'], 'String');
            }
            if (data.hasOwnProperty('country')) {
                obj['country'] = ApiClient.convertToType(data['country'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {module:model/Wire.TypeEnum} type
 */
Wire.prototype['type'] = undefined;

/**
 * Bank wire account number (alphanumeric)
 * @member {String} accountNumber
 */
Wire.prototype['accountNumber'] = undefined;

/**
 * Bank wire routing number
 * @member {String} routingNumber
 */
Wire.prototype['routingNumber'] = undefined;

/**
 * @member {String} beneficiaryName
 */
Wire.prototype['beneficiaryName'] = undefined;

/**
 * Two-letter country code (ISO 3166-1 alpha-2).
 * @member {module:model/Wire.CountryEnum} country
 */
Wire.prototype['country'] = undefined;





/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
Wire['TypeEnum'] = {

    /**
     * value: "WIRE"
     * @const
     */
    "WIRE": "WIRE"
};


/**
 * Allowed values for the <code>country</code> property.
 * @enum {String}
 * @readonly
 */
Wire['CountryEnum'] = {

    /**
     * value: "US"
     * @const
     */
    "US": "US"
};



export default Wire;

