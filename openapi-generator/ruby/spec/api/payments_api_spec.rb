=begin
#Plastiq Public API

#No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: 1.0.0

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 5.2.0

=end

require 'spec_helper'
require 'json'

# Unit tests for OpenapiClient::PaymentsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'PaymentsApi' do
  before do
    # run before each test
    @api_instance = OpenapiClient::PaymentsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of PaymentsApi' do
    it 'should create an instance of PaymentsApi' do
      expect(@api_instance).to be_instance_of(OpenapiClient::PaymentsApi)
    end
  end

  # unit tests for payment_intents_id_get
  # Retrieve a single Payment Intent
  # @param payer_id The Payer ID of the Payment Intent
  # @param id The ID of the Payment Intent
  # @param [Hash] opts the optional parameters
  # @return [PaymentIntent]
  describe 'payment_intents_id_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for payment_intents_id_patch
  # Update a Payment Intent
  # @param id The ID of the Payment Intent
  # @param patch_payment_intent_request_payload Payment Intent to update
  # @param [Hash] opts the optional parameters
  # @return [PaymentIntent]
  describe 'payment_intents_id_patch test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for payment_intents_post
  # Create a Payment Intent
  # @param create_payment_intent_request_payload Create a Payment Intent object staging it for execution
  # @param [Hash] opts the optional parameters
  # @option opts [String] :trace_id A valid UUID (V4) for tracing requests. Will be returned as a header. If not present or invalid, a generated UUID will be returned.
  # @option opts [String] :user_agent A string representing the User Agent. Required only when the request is not coming from the end user&#39;s browser.
  # @option opts [String] :end_user_device_id A unique identifier for the end user&#39;s browser. Recommended for compliance when the request is not coming from the end user&#39;s browser.
  # @option opts [String] :end_user_ip The IP address of the end user. Recommended for compliance when the request is not coming from the end user&#39;s browser.
  # @return [PaymentIntent]
  describe 'payment_intents_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for payments_get
  # Retrieve a paginated list of payments by query parameter(s)
  # @param payer_id The associated Payer ID to list payments for
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :offset The number of records you wish to skip before selecting records
  # @option opts [Integer] :limit Number of items to return
  # @return [InlineResponse2002]
  describe 'payments_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for payments_id_get
  # Retrieve a single Payment
  # @param payer_id The Payer ID associated with the Payment
  # @param id The ID of the Payment
  # @param [Hash] opts the optional parameters
  # @return [Payment]
  describe 'payments_id_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for payments_id_refunds_post
  # Refund or cancel an existing Payment
  # @param id The ID of the Payment to refund
  # @param payment_refund_request Payment Refund body
  # @param [Hash] opts the optional parameters
  # @option opts [String] :trace_id A valid UUID (V4) for tracing requests. Will be returned as a header. If not present or invalid, a generated UUID will be returned.
  # @return [PaymentRefund]
  describe 'payments_id_refunds_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for payments_post
  # Create a Payment from a Payment Intent
  # @param create_payment_request Payment to create
  # @param [Hash] opts the optional parameters
  # @option opts [String] :trace_id A valid UUID (V4) for tracing requests. Will be returned as a header. If not present or invalid, a generated UUID will be returned.
  # @option opts [String] :user_agent A string representing the User Agent. Required only when the request is not coming from the end user&#39;s browser.
  # @option opts [String] :end_user_device_id A unique identifier for the end user&#39;s browser. Recommended for compliance when the request is not coming from the end user&#39;s browser.
  # @option opts [String] :end_user_ip The IP address of the end user. Recommended for compliance when the request is not coming from the end user&#39;s browser.
  # @option opts [String] :idempotency_key A valid UUID (V4) for handling duplicate requests. Will return original status code, response body, and set a &#39;Idempotent-Replay&#39; header on response for a given key if a match exists.
  # @return [Payment]
  describe 'payments_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
