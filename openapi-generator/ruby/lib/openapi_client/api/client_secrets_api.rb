=begin
#Plastiq Public API

#No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: 1.0.0

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 5.2.0

=end

require 'cgi'

module OpenapiClient
  class ClientSecretsApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Create a single-use Client Secret
    # @param inline_object [InlineObject] 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :trace_id A valid UUID (V4) for tracing requests. Will be returned as a header. If not present or invalid, a generated UUID will be returned.
    # @option opts [String] :user_agent A string representing the User Agent. Required only when the request is not coming from the end user&#39;s browser.
    # @option opts [String] :end_user_device_id A unique identifier for the end user&#39;s browser. Recommended for compliance when the request is not coming from the end user&#39;s browser.
    # @option opts [String] :end_user_ip The IP address of the end user. Recommended for compliance when the request is not coming from the end user&#39;s browser.
    # @return [InlineResponse2001]
    def client_secrets_post(inline_object, opts = {})
      data, _status_code, _headers = client_secrets_post_with_http_info(inline_object, opts)
      data
    end

    # Create a single-use Client Secret
    # @param inline_object [InlineObject] 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :trace_id A valid UUID (V4) for tracing requests. Will be returned as a header. If not present or invalid, a generated UUID will be returned.
    # @option opts [String] :user_agent A string representing the User Agent. Required only when the request is not coming from the end user&#39;s browser.
    # @option opts [String] :end_user_device_id A unique identifier for the end user&#39;s browser. Recommended for compliance when the request is not coming from the end user&#39;s browser.
    # @option opts [String] :end_user_ip The IP address of the end user. Recommended for compliance when the request is not coming from the end user&#39;s browser.
    # @return [Array<(InlineResponse2001, Integer, Hash)>] InlineResponse2001 data, response status code and response headers
    def client_secrets_post_with_http_info(inline_object, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ClientSecretsApi.client_secrets_post ...'
      end
      # verify the required parameter 'inline_object' is set
      if @api_client.config.client_side_validation && inline_object.nil?
        fail ArgumentError, "Missing the required parameter 'inline_object' when calling ClientSecretsApi.client_secrets_post"
      end
      # resource path
      local_var_path = '/client-secrets'

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])
      header_params[:'Trace-Id'] = opts[:'trace_id'] if !opts[:'trace_id'].nil?
      header_params[:'User-Agent'] = opts[:'user_agent'] if !opts[:'user_agent'].nil?
      header_params[:'End-User-Device-Id'] = opts[:'end_user_device_id'] if !opts[:'end_user_device_id'].nil?
      header_params[:'End-User-Ip'] = opts[:'end_user_ip'] if !opts[:'end_user_ip'].nil?

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body] || @api_client.object_to_http_body(inline_object)

      # return_type
      return_type = opts[:debug_return_type] || 'InlineResponse2001'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['BearerAuth']

      new_options = opts.merge(
        :operation => :"ClientSecretsApi.client_secrets_post",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:POST, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ClientSecretsApi#client_secrets_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
